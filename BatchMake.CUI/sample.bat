REM 以下の3行は必ず書く
@echo off
bmake %0
exit /b %errorlevel%

[文字コードについて]
・UTF-8のみサポートする

[依存関係について]
・依存関係はヘッダから参照する
・ただし、ソールファイルはヘッダに記載されたものに加えて、このスクリプトファイル自身も含む

[ヘッダについて]
・行頭からはじまる"# !bmake"がヘッダの開始
・':'で始まらない行がターゲットファイル
・':'で始まる行がソースファイル
・空行がヘッダの終わり


# !bmake
target.mkv
  source1.mkv
  source2.mkv

この区間にターゲットを更新するスクリプトを書く
・連続しない改行は空白と同等
・空行(連続する空白)はコマンドの終わり
・行頭の '|' はパイプ記号。'|'の前に空白があってもよい。
・行頭の '<' および '>' はリダイレクト記号。リダイレクト記号の前に空白があってもよい。空白をはさんで行末までリダイレクト対象のファイルパス名または変数参照を書く。ファイルパス名がダブルクォートで始まっていない場合はエンコーディングが試みられる。
・#で始まる行はコメント行として無視される (空白としても扱われない)
・各コマンド引数のエンコーディングはC/C++/C#でのエンコーディングに準拠
・行の途中からのコメントはサポートしない

[スクリプトで使える文字列変数]
・${targets-n}
  n は1以上の整数
  ヘッダ上に書かれた n 番目のターゲットファイル名を表す文字列
  この文字列は必要ならダブルクォートでエンコードされている
  ターゲットファイルがただ一つしか存在しない場合は ${target} と書くことが出来る

・${sources-n}
  n は1以上の整数
  ヘッダ上に書かれた n 番目のソースファイル名を表す文字列
  この文字列は必要ならダブルクォートでエンコードされている
  ソースファイルがただ一つしか存在しない場合は ${source} と書くことが出来る

・${temp-file-n}
  n は1以上の整数
  一時ファイルのフルパス名を表す文字列
  この文字列は必要ならダブルクォートでエンコードされている
  一時ファイルは変数が最初に出現した時に自動的に作成され、スクリプトの終了時に自動的に削除される

  ・${temp-dir-n}
    n は1以上の整数
    一時ディレクトリのフルパス名を表す文字列
    この文字列は必要ならダブルクォートでエンコードされている
    一時ディレクトリは変数が最初に出現した時に自動的に作成され、スクリプトの終了時に自動的に削除される
